---

"x86_64":
  register_type: uint64_t
  register_size: 8
  register_list: [rax, rbx, rcx, rdx, rsi, rdi, r8, r9, r10, r11, r12, r13, r14, r15]
  templates:
    call_a_function: |
      call {{ function_name }}
    return_from_function: |
      ret
    fill_a_register: |
      mov {{ location }} + {{ offset }}, %{{ register }}
    push_to_stack: |
      {{ fill_a_register }}
      push %{{register}}
    restore_stack: |
      add $({{ stack_size }}), %rsp
    save_return_address: |
# does nothing since the return address is already at the top of the stack
    restore_return_address: |
      push {{ stack_size }} (%rsp)

"arm":
  register_type: uint32_t
  register_size: 4
  register_list: [r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12]
  templates:
    call_a_function: |
      bl {{ function_name }}
    return_from_function: |
      bx lr
    fill_a_register: |
      movw {{ register }}, #:lower16:{{ location }}
      movt {{ register }}, #:upper16:{{ location }}
      ldr {{ register }}, [{{ register }}, #{{ offset }}]
    push_to_stack: |
      {{ fill_a_register }}
      push {{ "{ " + register + " }" }}
    restore_stack: |
      sub sp, #{{ stack_size }}
    save_return_address: |
      push { lr }
    restore_return_address: |
      ldr lr, [sp, #{{ stack_size }}]

...
