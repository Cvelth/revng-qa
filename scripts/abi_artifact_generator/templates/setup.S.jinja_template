/*#-
This template file == distributed under the MIT License. See LICENSE.md for details.
#*/

/*(- generation_notice )*/

/*{ if current_style == 'gcc' -}*/
#include "../abi.h"

#if defined(TARGET_x86_64) || defined(TARGET_i386)
.intel_syntax noprefix
#endif
/*{- elif current_style == 'msvc' -}*/
ifndef rax
.model flat, c
endif

extern saved_return_address: /*( intel_register_type )*/
extern randomized_state: /*( intel_register_type )*/
extern printable_data: /*( intel_register_type )*/

extern regenerate_state: proc
extern print_current_state: proc

/*{ for name, arguments in argument_functions.items() -}*/
extern test_/*( name )*/: proc
/*{ endfor }*/

.code
/*{- endif }*/

/*{ for name, arguments in argument_functions.items() }*/
/*{- if current_style == 'gcc' -}*/
.global execute_/*( name )*/
execute_/*( name )*/:
/*{- elif current_style == 'msvc' -}*/
execute_/*( name )*/ proc
/*{- endif }*/
  /*( save_return_address )*/
  /*( fill_stack_with_random_data )*/
  /*( fill_registers_with_random_data )*/
  /*( call_a_function("test_" + name) )*/
/*{- if current_style == 'gcc' }*/
#ifndef CalleeIsResponsibleForStackCleanup
/*{- endif }*/
  /*( restore_stack )*/
/*{- if current_style == 'gcc' }*/
#endif
/*{- endif }*/
  /*( restore_return_address )*/
  /*( return_from_function )*/
/*{ if current_style == 'msvc' -}*/
execute_/*( name )*/ endp
/*{- endif }*/

/*{ endfor -}*/

/*{ for name, arguments in return_value_functions.items() }*/
/*{- if current_style == 'gcc' -}*/
.global execute_/*( name )*/_location
execute_/*( name )*/_location:
/*{- elif current_style == 'msvc' -}*/
execute_/*( name )*/_location proc
/*{- endif }*/
  /*( save_return_address )*/
  /*( fill_stack_with_random_data )*/
  /*( fill_registers_with_random_data )*/
  /*( call_a_function("test_" + name + "_location") )*/
  /*( save_registers )*/
/*{- if current_style == 'gcc' }*/
#ifndef CalleeIsResponsibleForStackCleanup
/*{- endif }*/
  /*( restore_stack )*/
/*{- if current_style == 'gcc' }*/
#endif
/*{- endif }*/
  /*( restore_return_address )*/
  /*( return_from_function )*/
/*{ if current_style == 'msvc' -}*/
execute_/*( name )*/_location endp
/*{- endif }*/

/*{ endfor -}*/

/*{ if current_style == 'gcc' -}*/
.global set_return_value_up
set_return_value_up:
/*{- elif current_style == 'msvc' -}*/
set_return_value_up proc
/*{- endif }*/
  /*( save_return_address )*/
  /*( call_a_function("regenerate_state") )*/
  /*( call_a_function("print_current_state") )*/
  /*( fill_stack_with_random_data )*/
  /*( restore_return_address )*/
  /*( fill_registers_with_random_data )*/
  /*( return_from_function )*/
/*{ if current_style == 'msvc' -}*/
set_return_value_up endp
/*{- endif }*/

/*{ if current_style == 'gcc' -}*/
.global restore_stack_pointer
restore_stack_pointer:
/*{- elif current_style == 'msvc' -}*/
restore_stack_pointer proc
/*{- endif }*/
  /*( save_return_address )*/
  /*( restore_stack )*/
  /*( restore_return_address )*/
  /*( return_from_function )*/
/*{ if current_style == 'msvc' -}*/
restore_stack_pointer endp
/*{ endif }*/
