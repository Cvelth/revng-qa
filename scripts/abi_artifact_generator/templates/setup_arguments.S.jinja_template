/*#-
This template file is distributed under the MIT License. See LICENSE.md for details.
#*/

/*(- generation_notice )*/

/*{ if current_style == 'gcc' -}*/
#include "../../abi.h"

#if defined(TARGET_x86_64) || defined(TARGET_i386)
.intel_syntax noprefix
#endif
/*{- elif current_style == 'msvc' -}*/
ifndef rax
;; for now only use `flat, c` (`cdecl`) abi for all the functions defined
;; in this file.
;; TODO: extend to support `stdcall` and `fastcall` properly.
.model flat, c
endif

extern randomized_state: /*( intel_register_type )*/
extern printable_data: /*( intel_register_type )*/
extern saved_return_address: /*( intel_register_type )*/

/*{ for name, arguments in argument_functions.items() -}*/
extern test_/*( name )*/: proc
/*{ endfor }*/

.code
/*{- endif }*/

/*{ for name, arguments in argument_functions.items() }*/
/*{- if current_style == 'gcc' -}*/
.global setup_/*( name )*/
setup_/*( name )*/:
/*{- elif current_style == 'msvc' -}*/
setup_/*( name )*/ proc
/*{- endif }*/
  /*( setup_prologue )*/
  /*( call_a_function("test_" + name) )*/
/*{- if current_style == 'gcc' }*/
#ifndef CalleeIsResponsibleForStackCleanup
/*{- endif }*/
  /*( restore_stack )*/
/*{- if current_style == 'gcc' }*/
#endif
/*{- endif }*/
  /*( return_from_function )*/
/*{ if current_style == 'msvc' -}*/
setup_/*( name )*/ endp
/*{- endif }*/

/*{ endfor -}*/
