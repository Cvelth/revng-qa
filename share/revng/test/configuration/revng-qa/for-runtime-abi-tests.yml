tags:
  - name: x86-64-systemv-abi
    implies: [x86-64]
    variables:
      ABI_NAME: SystemV_x86_64
      MSVC_CFLAGS:
        # Safeguard in case somebody tries using it with msvc
        - -DABIDEF=UNSUPPORTED

  - name: x86-64-microsoft-abi
    implies: [x86-64]
    variables:
      ABI_NAME: Microsoft_x86_64
      GCC_CFLAGS:
        - -DABIDEF=__attribute__((ms_abi))
        - -maccumulate-outgoing-args

  - name: x86-64-vectorcall-microsoft-abi
    implies: [x86-64]
    variables:
      ABI_NAME: Microsoft_x86_64_vectorcall
      CFLAGS:
        # Safeguard in case somebody tries using gcc
        - -DABIDEF=UNSUPPORTED
      MSVC_CFLAGS:
        - -DABIDEF=__vectorcall

  - name: i386-systemv-abi
    implies: [i386]
    variables:
      ABI_NAME: SystemV_x86
      MSVC_CFLAGS:
        # Safeguard in case somebody tries using it with msvc
        - -DABIDEF=UNSUPPORTED

  - name: i386-regparm-3-systemv-abi
    implies: [i386]
    variables:
      ABI_NAME: SystemV_x86_regparm_3
      GCC_CFLAGS:
        - -DABIDEF=__attribute__((regparm(3)))
      MSVC_CFLAGS:
        # Safeguard in case somebody tries using it with msvc
        - -DABIDEF=UNSUPPORTED

  - name: i386-regparm-2-systemv-abi
    implies: [i386]
    variables:
      ABI_NAME: SystemV_x86_regparm_2
      GCC_CFLAGS:
        - -DABIDEF=__attribute__((regparm(2)))
      MSVC_CFLAGS:
        # Safeguard in case somebody tries using it with msvc
        - -DABIDEF=UNSUPPORTED

  - name: i386-regparm-1-systemv-abi
    implies: [i386]
    variables:
      ABI_NAME: SystemV_x86_regparm_1
      GCC_CFLAGS:
        - -DABIDEF=__attribute__((regparm(1)))
      MSVC_CFLAGS:
        # Safeguard in case somebody tries using it with msvc
        - -DABIDEF=UNSUPPORTED

  - name: i386-cdecl-microsoft-abi
    implies: [i386]
    variables:
      ABI_NAME: Microsoft_x86_cdecl
      GCC_CFLAGS:
        - -DABIDEF=__attribute__((ms_abi,cdecl))
      MSVC_CFLAGS:
        - -DABIDEF=__cdecl

  - name: i386-fastcall-microsoft-abi
    implies: [i386]
    variables:
      ABI_NAME: Microsoft_x86_fastcall
      GCC_CFLAGS:
        - -DABIDEF=__attribute__((ms_abi,fastcall))
      MSVC_CFLAGS:
        - -DABIDEF=__fastcall

  - name: i386-stdcall-microsoft-abi
    implies: [i386]
    variables:
      ABI_NAME: Microsoft_x86_stdcall
      GCC_CFLAGS:
        - -DABIDEF=__attribute__((ms_abi,stdcall))
      MSVC_CFLAGS:
        - -DABIDEF=__stdcall

  - name: i386-vectorcall-microsoft-abi
    implies: [i386]
    variables:
      ABI_NAME: Microsoft_x86_vectorcall
      CFLAGS:
        # Safeguard in case somebody tries using it with gcc
        - -DABIDEF=UNSUPPORTED
      MSVC_CFLAGS:
        - -DABIDEF=__vectorcall

  - name: aarch64-aapcs64-abi
    implies: [aarch64]
    variables:
      ABI_NAME: AAPCS64

  - name: arm-aapcs-abi
    implies: [arm]
    variables:
      ABI_NAME: AAPCS

  - name: for-runtime-abi-tests
    variables:
      GCC_CFLAGS:
        - -std=c11
        - -fno-pic
        - -fno-pie
        - -fno-stack-protector

sources:
  - tags: [for-runtime-abi-tests]
    repeat-for:
      - [x86-64-systemv-abi]
      - [i386-systemv-abi]
      - [i386-regparm-3-systemv-abi]
      - [i386-regparm-2-systemv-abi]
      - [i386-regparm-1-systemv-abi]
      - [i386-cdecl-microsoft-abi]
      - [i386-fastcall-microsoft-abi]
      - [i386-stdcall-microsoft-abi]
      # - [aarch64-aapcs64-abi]
      - [arm-aapcs-abi]
    members:
      - share/revng/test/tests/abi/

commands:
  - type: revng-qa.runtime-abi-tests
    from:
      - type: source
        filter: for-runtime-abi-tests
    suffix: /
    command: |-
      "${INPUT}/build-abi-test-binaries.sh"
        "${INPUT}"
        "${OUTPUT}"
        "${TRIPLE}"
        "${GCC_CFLAGS} ${COMMON_CFLAGS}"
        "${OBJDUMP_FLAGS}"
